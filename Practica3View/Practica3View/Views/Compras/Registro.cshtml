@model Practica3View.Models.AbonoViewModel
@{
    ViewData["Title"] = "Registro";
}

<style>
    .is-invalid {
        border-color: #dc3545 !important;
    }

    .card {
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .form-control:focus, .form-select:focus {
        border-color: #0d6efd;
        box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.25);
    }
</style>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card border-primary">
                <div class="card-header bg-primary text-white text-center">
                    <h4 class="mb-0">Registro</h4>
                </div>
                <div class="card-body">
                    @if (ViewBag.Error != null)
                    {
                        <div class="alert alert-danger text-center">
                            @ViewBag.Error
                        </div>
                    }

                    @if (!ViewData.ModelState.IsValid)
                    {
                        <div class="alert alert-warning">
                            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                            {
                                <div>• @error.ErrorMessage</div>
                            }
                        </div>
                    }

                    <form asp-action="Registro" method="post" id="abonoForm">
                        @Html.AntiForgeryToken()

                        <!-- Debug Info -->
                        <div class="alert alert-info small" id="debugInfo" style="display: none;">
                            <strong>Debug Info:</strong><br>
                            <span id="debugText"></span>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-8">
                                <label class="form-label"><strong>Compra</strong></label>
                                <select asp-for="Id_Compra" class="form-select" id="compraSelect" required>
                                    <option value="">Seleccione...</option>
                                    @if (Model?.ComprasPendientes != null)
                                    {
                                        @foreach (var compra in Model.ComprasPendientes)
                                        {
                                            <option value="@compra.Id_Compra" data-saldo="@compra.Saldo" data-descripcion="@compra.Descripcion">
                                                @compra.Descripcion
                                            </option>
                                        }
                                    }
                                </select>
                                <span asp-validation-for="Id_Compra" class="text-danger"></span>
                            </div>
                            <div class="col-md-4">
                                <button type="button" class="btn btn-outline-primary mt-4" id="btnConsultar">
                                    Consultar
                                </button>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label class="form-label"><strong>Saldo Anterior</strong></label>
                            <input asp-for="SaldoAnterior" class="form-control bg-light" id="saldoAnterior" readonly />
                            <span asp-validation-for="SaldoAnterior" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label class="form-label"><strong>Abono</strong></label>
                            <input asp-for="Abono" class="form-control" type="number" step="0.01" min="0.01" id="montoAbono" required />
                            <span asp-validation-for="Abono" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label class="form-label"><strong>Saldo Restante</strong></label>
                            <input type="text" class="form-control bg-light" id="saldoRestante" readonly />
                        </div>

                        <div class="text-center">
                            <button type="submit" class="btn btn-primary px-4" id="btnAbonar">
                                Abonar
                            </button>
                        </div>
                    </form>
                </div>
            </div>

            @if (Model?.ComprasPendientes != null && Model.ComprasPendientes.Any())
            {
                <div class="card border-primary mt-3">
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-sm table-bordered">
                                <thead class="table-primary">
                                    <tr class="text-center">
                                        <th>Producto</th>
                                        <th>Saldo</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var compra in Model.ComprasPendientes)
                                    {
                                        <tr class="text-center">
                                            <td>@compra.Descripcion</td>
                                            <td>₡@compra.Saldo.ToString("N2")</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="card border-primary mt-3">
                    <div class="card-body text-center">
                        <p class="text-muted">No hay compras pendientes</p>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            console.log('Página de registro cargada');
            console.log('jQuery version:', $.fn.jquery);

            // Verificar que los elementos existen
            console.log('Elemento compraSelect encontrado:', $('#compraSelect').length);
            console.log('Elemento saldoAnterior encontrado:', $('#saldoAnterior').length);
            console.log('Elemento montoAbono encontrado:', $('#montoAbono').length);

            // Botón de debug
            $('#btnDebug').on('click', function() {
                $('#debugInfo').toggle();
                updateDebugInfo();
            });

            // Evento cuando cambia la selección de compra
            $('#compraSelect').on('change', function() {
                console.log('Actualizando saldo...');
                actualizarSaldo();
            });

            // Evento cuando se hace clic en consultar
            $('#btnConsultar').on('click', function() {
                console.log('Botón consultar clickeado');
                actualizarSaldo();
            });

            // Evento cuando cambia el monto del abono
            $('#montoAbono').on('input', function() {
                calcularSaldoRestante();
            });

            function actualizarSaldo() {
                var selectedOption = $('#compraSelect option:selected');
                var saldo = selectedOption.data('saldo');
                var descripcion = selectedOption.data('descripcion');

                console.log('Opción seleccionada:', {
                    value: selectedOption.val(),
                    saldo: saldo,
                    descripcion: descripcion,
                    text: selectedOption.text()
                });

                if (selectedOption.val() !== '' && saldo !== undefined && saldo !== null) {
                    var saldoNumerico = parseFloat(saldo);
                    console.log('Saldo numérico:', saldoNumerico);

                    $('#saldoAnterior').val(saldoNumerico.toFixed(2));
                    // Asegurar que el valor se asigne correctamente
                    $('input[name="SaldoAnterior"]').val(saldoNumerico);

                    // Calcular saldo restante si hay abono
                    calcularSaldoRestante();
                    console.log('Saldo actualizado a:', saldoNumerico);
                } else {
                    $('#saldoAnterior').val('');
                    $('input[name="SaldoAnterior"]').val('');
                    $('#saldoRestante').val('');
                    console.log('Saldo limpiado');
                }

                // Limpiar el campo de abono cuando cambia la compra
                $('#montoAbono').val('');
                $('#saldoRestante').val('');
                updateDebugInfo();
            }

            function calcularSaldoRestante() {
                var saldoAnterior = parseFloat($('#saldoAnterior').val()) || 0;
                var abono = parseFloat($('#montoAbono').val()) || 0;

                console.log('Calculando saldo restante:', {
                    saldoAnterior: saldoAnterior,
                    abono: abono
                });

                if (saldoAnterior > 0 && abono >= 0) {
                    var saldoRestante = saldoAnterior - abono;
                    $('#saldoRestante').val(saldoRestante.toFixed(2));

                    // Validación en tiempo real
                    if (abono > saldoAnterior) {
                        $('#montoAbono').addClass('is-invalid');
                        $('#btnAbonar').prop('disabled', true);
                        console.log('Abono mayor que saldo - botón deshabilitado');
                    } else {
                        $('#montoAbono').removeClass('is-invalid');
                        $('#btnAbonar').prop('disabled', false);
                        console.log('Validación OK - botón habilitado');
                    }
                } else {
                    $('#saldoRestante').val('');
                }
                updateDebugInfo();
            }

            function updateDebugInfo() {
                var debugText = 'Id_Compra: ' + $('#compraSelect').val() + '<br>';
                debugText += 'SaldoAnterior: ' + $('#saldoAnterior').val() + '<br>';
                debugText += 'Abono: ' + $('#montoAbono').val() + '<br>';
                debugText += 'SaldoRestante: ' + $('#saldoRestante').val() + '<br>';
                debugText += 'Botón habilitado: ' + !$('#btnAbonar').prop('disabled');
                $('#debugText').html(debugText);
            }

            // Validación del formulario antes del envío
            $('#abonoForm').on('submit', function(e) {
                var idCompra = parseInt($('#compraSelect').val()) || 0;
                var saldoAnterior = parseFloat($('#saldoAnterior').val()) || 0;
                var abono = parseFloat($('#montoAbono').val()) || 0;

                console.log('Enviando formulario:', {
                    idCompra: idCompra,
                    saldoAnterior: saldoAnterior,
                    abono: abono
                });

                if (idCompra <= 0) {
                    e.preventDefault();
                    alert('Debe seleccionar una compra.');
                    return false;
                }

                if (saldoAnterior <= 0) {
                    e.preventDefault();
                    alert('El saldo anterior debe ser mayor a cero.');
                    return false;
                }

                if (abono <= 0) {
                    e.preventDefault();
                    alert('El abono debe ser mayor a cero.');
                    return false;
                }

                if (abono > saldoAnterior) {
                    e.preventDefault();
                    alert('El abono no puede ser mayor al saldo anterior.');
                    return false;
                }

                console.log('Formulario válido - enviando...');
                return true;
            });
        });
    </script>
}